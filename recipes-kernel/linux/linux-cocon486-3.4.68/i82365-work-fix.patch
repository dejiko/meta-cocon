diff --git a/arch/x86/kernel/Makefile b/arch/x86/kernel/Makefile
index 532d2e0..9b22f2c 100644
--- a/arch/x86/kernel/Makefile
+++ b/arch/x86/kernel/Makefile
@@ -33,7 +33,7 @@ obj-y			+= pci-dma.o quirks.o topology.o kdebugfs.o
 obj-y			+= alternative.o i8253.o pci-nommu.o hw_breakpoint.o
 obj-y			+= tsc.o io_delay.o rtc.o
 obj-y			+= pci-iommu_table.o
-obj-y			+= resource.o
+# obj-y			+= resource.o
 
 obj-y				+= trampoline.o trampoline_$(BITS).o
 obj-y				+= process.o
diff --git a/arch/x86/kernel/resource.c b/arch/x86/kernel/resource.c
index 2a26819..ddc0d00a 100644
--- a/arch/x86/kernel/resource.c
+++ b/arch/x86/kernel/resource.c
@@ -4,6 +4,7 @@
 static void resource_clip(struct resource *res, resource_size_t start,
 			  resource_size_t end)
 {
+/*
 	resource_size_t low = 0, high = 0;
 
 	if (res->end < start || res->start > end)
@@ -20,10 +21,12 @@ static void resource_clip(struct resource *res, resource_size_t start,
 		res->end = start - 1;
 	else
 		res->start = end + 1;
+*/
 }
 
 static void remove_e820_regions(struct resource *avail)
 {
+/*
 	int i;
 	struct e820entry *entry;
 
@@ -33,11 +36,13 @@ static void remove_e820_regions(struct resource *avail)
 		resource_clip(avail, entry->addr,
 			      entry->addr + entry->size - 1);
 	}
+*/
 }
 
 void arch_remove_reservations(struct resource *avail)
 {
 	/* Trim out BIOS areas (low 1MB and high 2MB) and E820 regions */
+/*
 	if (avail->flags & IORESOURCE_MEM) {
 		if (avail->start < BIOS_END)
 			avail->start = BIOS_END;
@@ -45,4 +50,5 @@ void arch_remove_reservations(struct resource *avail)
 
 		remove_e820_regions(avail);
 	}
+*/
 }
diff --git a/arch/x86/pci/i386.c b/arch/x86/pci/i386.c
index 831971e..adfeb80 100644
--- a/arch/x86/pci/i386.c
+++ b/arch/x86/pci/i386.c
@@ -154,6 +154,9 @@ pcibios_align_resource(void *data, const struct resource *res,
 			return start;
 		if (start & 0x300)
 			start = (start + 0x3ff) & ~0x3ff;
+	} else if (res->flags & IORESOURCE_MEM) {
+		if (start < BIOS_END)
+			start = BIOS_END;
 	}
 	return start;
 }
