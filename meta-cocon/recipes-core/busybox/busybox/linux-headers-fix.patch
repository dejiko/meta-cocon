Source: Loosely based on a patch on the mailing list which was made against the latest HEAD.
        This is just the bare minimum because the patch upstream is incomplete/wrong as is.
Upstream: Not quite, there are several mails on the topics but no action from upstream.
          https://lkml.org/lkml/2012/3/21/516
          https://lkml.org/lkml/2012/3/22/238
          http://lists.busybox.net/pipermail/busybox/2012-March/077563.html
          http://lists.busybox.net/pipermail/busybox/2012-March/077562.html
Reason: /usr/include/linux/ext2_fs.h:178:41: error: unknown type name 'umode_t'
        when compiling against linux-headers 3.3+

diff --git a/e2fsprogs/e2fs_defs.h b/e2fsprogs/e2fs_defs.h
index 379640e..7974497 100644
--- a/e2fsprogs/e2fs_defs.h
+++ b/e2fsprogs/e2fs_defs.h
@@ -467,7 +467,7 @@ struct ext2_super_block {
 #define EXT2_FEATURE_COMPAT_IMAGIC_INODES	0x0002
 #define EXT3_FEATURE_COMPAT_HAS_JOURNAL		0x0004
 #define EXT2_FEATURE_COMPAT_EXT_ATTR		0x0008
-#define EXT2_FEATURE_COMPAT_RESIZE_INODE	0x0010
+#define EXT2_FEATURE_COMPAT_RESIZE_INO		0x0010
 #define EXT2_FEATURE_COMPAT_DIR_INDEX		0x0020
 
 #define EXT2_FEATURE_RO_COMPAT_SPARSE_SUPER	0x0001

diff --git a/e2fsprogs/tune2fs.c b/e2fsprogs/tune2fs.c
index 020bdaa..e67e94e 100644
--- a/e2fsprogs/tune2fs.c
+++ b/e2fsprogs/tune2fs.c
@@ -8,7 +8,7 @@
  */
 #include "libbb.h"
 #include <linux/fs.h>
-#include <linux/ext2_fs.h>
+#include "e2fs_defs.h"
 
 // storage helpers
 char BUG_wrong_field_size(void);

diff --git a/util-linux/mkfs_ext2.c b/util-linux/mkfs_ext2.c
index f6ccc9c..facda85 100644
--- a/util-linux/mkfs_ext2.c
+++ b/util-linux/mkfs_ext2.c
@@ -48,7 +48,7 @@
 
 #include "libbb.h"
 #include <linux/fs.h>
-#include <linux/ext2_fs.h>
+#include "../e2fsprogs/e2fs_defs.h"
 
 #define ENABLE_FEATURE_MKFS_EXT2_RESERVED_GDT 0
 #define ENABLE_FEATURE_MKFS_EXT2_DIR_INDEX    1
