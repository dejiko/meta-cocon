#!/bin/bash

# opencocon main menu

SELECT=/tmp/.cocon.menu.select
HOSTN=/tmp/.cocon.menu.host
USERN=/tmp/.cocon.menu.usern
DOMAIN=/tmp/.cocon.menu.domain
PWROFF=/tmp/.cocon.poweroff
PORTN=/tmp/.cocon.port
PORTN2=/tmp/.cocon.port2
SSH_HOSTN=/tmp/.cocon.sshhost
SSH_PORT=/tmp/.cocon.sshport
SSH_USERN=/tmp/.cocon.sshuser
SSH_FWHOSTN=/tmp/.cocon.fwhost
SSH_FWPORT=/tmp/.cocon.fwport
ABOUT=/usr/share/doc/cocon/about.txt
VERSION=/etc/cocon-version
PARTCNF=/tmp/.cocon.cnf.part
SELECT_PREV=/tmp/.cocon.menu.select-prev

reconn=0


# If have prev connection?
if [ -r $SELECT_PREV ];
then
  menu_reconnect="REC"
  menu_reconnect_desc="Reconnect to `cat $HOSTN` (` cat $SELECT_PREV `)"
else
  menu_reconnect="----"
  menu_reconnect_desc="[ Select protocol ]"
fi


dialog --no-cancel --menu "`cat $VERSION` (experimental)" 20 40 25 \
"$menu_reconnect" "$menu_reconnect_desc" \
XEPHYR "Connect XDMCP" \
RDP "Connect RDP" \
VNC2 "Connect VNC" \
VNC "Connect VNC (Alt.)" \
SPICE "Connect SPICE" \
WWW "Web Browser" \
NET "Network Setting" \
SSHPF "Setup SSH port forwarding" \
ETC "Option, Ambient tools" \
ABOUT "About opencocon" \
OFF "Power Off" 2>$SELECT

select=`cat $SELECT`

if [ "$select" = "REC" ];
then
  reconn=1
  export reconn
  select=`cat $SELECT_PREV`
fi


case $select in 
XEPHYR)

  # XDMCP via XEPHYR
  if [ $reconn -eq 0 ];
  then
    dialog --inputbox "Enter hostname to connect" 8 40 2>$HOSTN
    if [ $? -ne 0 ];
    then
      rm $HOSTN $SELECT_PREV
      exit 0
    fi
  fi

  hostn="`cat $HOSTN`"
  if [ $hostn ];
  then
    echo "COCON_X_HOST=$hostn" >> $PARTCNF
    cocon-xephyr-launch
    rm $PARTCNF
    echo "XEPHYR" > $SELECT_PREV
  fi
  ;;


VNC)

  # Connect VNC via gtk-vnc (Alt.)
  if [ $reconn -eq 0 ];
  then
    dialog --inputbox "Enter hostname:display to connect" 8 40 2>$HOSTN
    if [ $? -ne 0 ];
    then
      rm $HOSTN $SELECT_PREV
      exit 0
    fi
  fi

  hostn="`cat $HOSTN`"
  if [ $hostn ];
  then
    echo "COCON_VNC_HOST=$hostn" >> $PARTCNF
    echo "COCON_VNC_GTK-VNC=1" >> $PARTCNF

    cocon-vnc-launch
    rm $PARTCNF
    echo "VNC" > $SELECT_PREV
  fi
  ;;

VNC2)
   
  # Connect VNC via libvncclient 
  if [ $reconn -eq 0 ];
  then
    dialog --inputbox "Enter hostname:display to connect" 8 40 2>$HOSTN
    if [ $? -ne 0 ];
    then
      rm $HOSTN $SELECT_PREV
      exit 0
    fi
  fi
  hostn="`cat $HOSTN`"

  if [ -n "$hostn" ];
  then
    echo "COCON_VNC_HOST=$hostn" >> $PARTCNF

    cocon-vnc-launch
    rm $PARTCNF
    echo "VNC2" > $SELECT_PREV
  fi
  ;;


RDP)

  # Connect RDP with xfreerdp
  if [ $reconn -eq 0 ];
  then
    dialog --inputbox "Enter hostname(:port) to connect" 8 40 2>$HOSTN
    if [ $? -eq 0 ];
    then
      dialog --inputbox "Enter login username" 8 40 2>$USERN
      if [ $? -ne 0 ];
      then
        # Canceled.
        rm $HOSTN $USERN $SELECT_PREV
        exit 0
      fi
    else
      rm $HOSTN $SELECT_PREV
      exit 0
    fi
  fi

  hostn="`cat $HOSTN`"
  usern="`cat $USERN`"
 
  if [ -n "$hostn" -a -n "$usern" ];
  then

    if [ $reconn -eq 0 ];
    then
      dialog --inputbox "Enter Domain name (if not use domain name, just enter)" 8 40 2>$DOMAIN
    fi

    rdpdomain="`cat $DOMAIN`"
  fi

  if [ $hostn ];
  then
    echo "COCON_RDP_HOST=$hostn" >> $PARTCNF

    if [ $usern ];
    then
      echo "COCON_RDP_USER=$usern" >> $PARTCNF
    fi

    if [ $rdpdomain ];
    then
      echo "COCON_RDP_DOMAIN=$rdpdomain" >> $PARTCNF
    fi

    cocon-freerdp-launch
    
    rm $PARTCNF
    echo "RDP" > $SELECT_PREV
  fi

  ;;

SPICE)

  # SPICE
  if [ $reconn -eq 0 ];
  then
    dialog --inputbox "Enter hostname to connect" 8 40 2>$HOSTN
    if [ $? -ne 0 ];
    then
      rm $HOSTN $SELECT_PREV
      exit 0
    fi

  fi

  hostn=`cat $HOSTN`
  
  if [ -n "$hostn" ];
  then
    echo "COCON_SPICE_HOST=$hostn" >> $PARTCNF
    if [ $reconn -eq 0 ];
    then
  
      dialog --inputbox "Enter port number (non-TLS, default is 5900. for use TLS, just enter.)" 8 40 2>$PORTN
      if [ $? -ne 0 ];
      then
        rm $HOSTN $PORTN $SELECT_PREV
        exit 0
      fi

      if [ -r $PORTN ];
      then
        if [ -z ` cat $PORTN ` ];
        then
          # If non-TLS port is unknown (and press OK), tell TLS port.
          dialog --inputbox "Enter port number (TLS, default is 5901)" 8 40 2>$PORTN2
          if [ $? -ne 0 ];
          then
            rm $HOSTN $PORTN $PORTN2 $SELECT_PREV
            exit 0
          fi
        else
          touch $PORTN2
        fi
      fi
    fi

    if [ -n "`cat $PORTN`" -o -n "`cat $PORTN2`" ];
    then
      echo "COCON_SPICE_PORT=`cat $PORTN`" >> $PARTCNF
      echo "COCON_SPICE_TLSPORT=`cat $PORTN2`" >> $PARTCNF

      cocon-spice-launch

      rm $PARTCNF
      echo "SPICE" > $SELECT_PREV

      # Workaround: force restart lxterminal.
      pkill lxterminal
    fi
  fi

  ;;

SSHPF)
  dialog --inputbox "Enter SSH hostname to connect" 8 40 2>$SSH_HOSTN
  dialog --inputbox "Enter SSH port to connect (if default port(22), just enter)" 8 40 2>$SSH_PORT
  dialog --inputbox "Enter SSH username" 8 40 2>$SSH_USERN
  dialog --inputbox "Enter forward hostname" 8 40 2>$SSH_FWHOSTN
  dialog --inputbox "Enter forward port (RDP:3389, VNC:5900+Display number)" 8 40 2>$SSH_FWPORT
  
  ssh_hostn=`cat $SSH_HOSTN`
  ssh_port=`cat $SSH_PORT`
  ssh_user=`cat $SSH_USERN`
  ssh_fwhostn=`cat $SSH_FWHOSTN`
  ssh_fwport=`cat $SSH_FWPORT`
  
  if [ -n "$ssh_hostn" -a -n "$ssh_user" -a -n "$ssh_fwhostn" -a -n "$ssh_fwport" ];
  then
    if [ -z "$ssh_port" ];
    then
      ssh_port=22 
    fi

    # TODO : move to sepalated script
    /usr/bin/ssh -N -f -L $ssh_fwport:$ssh_fwhostn:$ssh_fwport -p $ssh_port -l $ssh_user $ssh_hostn
  
    if [ -z "`pidof ssh`" ];
    then
      dialog --msgbox "Failed to connect." 15 60
    else
      dialog --msgbox "Okey, SSH port-forwarding is connected. please input hostname to 'localhost'." 15 60
    fi
  fi
  ;;

WWW)
  # Web Browser
  cocon-caravan-launch
  ;;

NET)
  cocon-netset-launch
  ;;

ETC)
  # Sub menu
  cocon-option-menu
  ;;


ABOUT)
  about=`cat $ABOUT`
  dialog --msgbox "$about" 20 60
  ;;

OFF)
  # Power-off flag (to cocon-menu)
  touch $PWROFF
  exit 1

  ;;

esac

